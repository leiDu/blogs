<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Universe</title>
    <link>https://leidu.github.io/blogs/categories/javascript/</link>
    <description>Recent content in javascript on Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Jun 2020 18:59:47 +0800</lastBuildDate>
    
	<atom:link href="https://leidu.github.io/blogs/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Music Player base on  MUI framework</title>
      <link>https://leidu.github.io/blogs/musicplayer/</link>
      <pubDate>Sun, 21 Jun 2020 18:59:47 +0800</pubDate>
      
      <guid>https://leidu.github.io/blogs/musicplayer/</guid>
      <description>这是一个基于mui框架实现的一个网页随机音乐播放,主要功能有播放与暂停,随机切歌,静音三个。
需求建模  原型界面  设计软件  应用端
Axure RP 网页版
摹客原型     数据模型 业务模型  框架  应用架构
描述IT系统功能和技术实现的内容 分类  C结构
Client,最早的一种初始分类单机结构,不涉及联网的客户端,如单机游戏 S结构
Server,用于网络通信的一种服务结构,使用Socket(套接字)来传输数据,包含TCP和UDP两种协议 C/S结构
Client/Server,一种端应用,原来的APP应用,优点:稳定,功能强大;缺点:更新不及时,跨平台弱 B结构 B/S结构
Browser/Server,一种页应用,直接在网页中进行操作. C/S+B/S混合结构
以C/S为主,B/S为辅的一种结构,如微信小程序,快应用,现代版QQ B/S+C/S混合结构
以B/S为主,C/S为辅的一种结构,如在线直播,在线电影   开发模型
主要是MVC,其中包含MVC 1.0和MVC 2.0,其中MVVP是对MVC的扩展 开发框架  weex quickapp weixin app uniapp mui    跨域与协议   跨域 定义:网页应用中的一种安全机制,域:作用域,网页应用中的ip/主机名/域名
跨域方式:设置头部(request:伪造);设置响应许可(运行那些ip/域名来访问,服务器就做出响应);JSON;webservice
  协议
协议头://host:port/contextroot/path
  跨域的必要条件
协议头不同;主机名不同;IP协议不同;域名不同;端口号不同;上下文根不同</description>
    </item>
    
    <item>
      <title>Javascript And Image II</title>
      <link>https://leidu.github.io/blogs/javascriptandimg_2/</link>
      <pubDate>Sun, 10 May 2020 22:53:33 +0800</pubDate>
      
      <guid>https://leidu.github.io/blogs/javascriptandimg_2/</guid>
      <description>根据上一次的“基于javaScript&amp;quot;的改变图片，有一定的缺陷，如果浏览器不支持 javaScript会怎么样。而为了更高效的执行代码，现在都采用一个模式——代码分 离，这种模式使代码更高效的执行，也更好的让人阅读。接下来，就是讲解HTML 和javaScript的分离。
html
 ... &amp;lt;div id=&amp;quot;imgs&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;your image path&amp;quot; title=&amp;quot;your description&amp;quot; /&amp;gt; &amp;lt;a href=&amp;quot;your image path&amp;quot; title=&amp;quot;your description&amp;quot; /&amp;gt; ... &amp;lt;div&amp;gt; &amp;lt;img id=&amp;quot;placeholder&amp;quot; src=&amp;quot;your image path&amp;quot; /&amp;gt; &amp;lt;p id=&amp;quot;description&amp;quot;&amp;gt;description&amp;lt;/p&amp;gt; ...  javaScript 其中的判断语句用于判断浏览器是否支持javaScript。
function grally() { if(!document.getElementsByTagName) return false; if(!document.getElementById) return false; if(!document.getElementById(&amp;quot;imgs&amp;quot;)) return false; var gallery = document.getElementById(&amp;quot;imgs&amp;quot;); var links = gallery.getElementsByTagName(&amp;quot;a&amp;quot;); for(var i = 0; i &amp;lt; links.length; i++) { links[i].onclick = function() { return showPic(this) ?</description>
    </item>
    
    <item>
      <title>Javascript And Image I</title>
      <link>https://leidu.github.io/blogs/javascriptandimg_1/</link>
      <pubDate>Sun, 10 May 2020 22:36:52 +0800</pubDate>
      
      <guid>https://leidu.github.io/blogs/javascriptandimg_1/</guid>
      <description>今天主要研究的是—javaScript图片库,通过点击一条超连接文本，不用跳转直接在 本页面显示图片。这个主要用到了占位符，通过占位符图片替换成自己想要查 看的图片。 思路：
 获取超链接文件的路径
获取占位符图片
把超链接的文件放到占位符图片里
 动态改变图片
 标记 我认为这里的标记在这里是html文件里面所使用的标签。如以下部分代码:   ... &amp;lt;a href=&amp;quot;your image path&amp;quot; title=&amp;quot;your image description&amp;quot; onclick=&amp;quot;showPic(this); return false;&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;your image path&amp;quot; title=&amp;quot;your image description&amp;quot; onclick=&amp;quot;showPic(this); return false;&amp;quot;&amp;gt;xxx&amp;lt;/a&amp;gt; ... &amp;lt;img id=&amp;quot;placeholder&amp;quot; src=&amp;quot;your default image path or null&amp;quot; /&amp;gt; ...   在showPic(this)中的&amp;rsquo;this’，含义是“这个对象”，在这里指“这个元素节 点。把获取到的节点通过点击事件把参数值传到javaScript中，以便使用。
javaScript
 &amp;lt;script&amp;gt; function showPic(whichpic) { var source = whichpic.getAttribute(&amp;quot;href&amp;quot;); var placeholder = document.getElementById(&amp;quot;placeholder&amp;quot;); placeholder.setAttribute(&amp;quot;src&amp;quot;, source); } &amp;lt;/script&amp;gt;   whichpic代表一个元素节点，接收来自html中this传过来的值，具体是指向某个图片 元素。通过whichpic.</description>
    </item>
    
    <item>
      <title>Change Color</title>
      <link>https://leidu.github.io/blogs/change-color/</link>
      <pubDate>Sun, 10 May 2020 22:21:59 +0800</pubDate>
      
      <guid>https://leidu.github.io/blogs/change-color/</guid>
      <description>在代码中主要用到了javaScript中的onchange事件。onchange事件可以用于input text、textarea、select option等HTML Form元素上，当元素内容改变时就触发这 个事件来执行你所写的javaScript程序。
  变背景
html
   &amp;lt;select id=&amp;quot;changeBackground&amp;quot; onchange=&amp;quot;changeBg()&amp;quot;&amp;gt; &amp;lt;option value=&amp;quot;blue&amp;quot;&amp;gt;blue&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;pink&amp;quot;&amp;gt;pink&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;gray&amp;quot;&amp;gt;gray&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt;  js
 &amp;lt;script&amp;gt; function changeBg(color) { var getSelectValue = document.getElementById(&amp;quot;changeBackground&amp;quot;).value; document.bgColor = getSelectValue; } &amp;lt;/script&amp;gt;    变字体颜色
html
   &amp;lt;select id=&amp;quot;changeFontColor&amp;quot; onchange=&amp;quot;changeFC(value)&amp;quot; &amp;gt; &amp;lt;option value=1&amp;gt;selete, please&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;blue&amp;quot;&amp;gt;blue&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;pink&amp;quot;&amp;gt;pink&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;quot;gray&amp;quot;&amp;gt;gray&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;div id=&amp;quot;text&amp;quot;&amp;gt;She is my mother!&amp;lt;/div&amp;gt;  js
第一种方式，通过直接使用onchange事件来实现
 &amp;lt;script&amp;gt; function chageFC(color) { document.</description>
    </item>
    
  </channel>
</rss>