<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mui on Universe</title>
    <link>https://leidu.github.io/blogs/tags/mui/</link>
    <description>Recent content in mui on Universe</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Jun 2020 18:59:47 +0800</lastBuildDate>
    
	<atom:link href="https://leidu.github.io/blogs/tags/mui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Music Player base on  MUI framework</title>
      <link>https://leidu.github.io/blogs/musicplayer/</link>
      <pubDate>Sun, 21 Jun 2020 18:59:47 +0800</pubDate>
      
      <guid>https://leidu.github.io/blogs/musicplayer/</guid>
      <description>这是一个基于mui框架实现的一个网页随机音乐播放,主要功能有播放与暂停,随机切歌,静音三个。
需求建模  原型界面  设计软件  应用端
Axure RP 网页版
摹客原型     数据模型 业务模型  框架  应用架构
描述IT系统功能和技术实现的内容 分类  C结构
Client,最早的一种初始分类单机结构,不涉及联网的客户端,如单机游戏 S结构
Server,用于网络通信的一种服务结构,使用Socket(套接字)来传输数据,包含TCP和UDP两种协议 C/S结构
Client/Server,一种端应用,原来的APP应用,优点:稳定,功能强大;缺点:更新不及时,跨平台弱 B结构 B/S结构
Browser/Server,一种页应用,直接在网页中进行操作. C/S+B/S混合结构
以C/S为主,B/S为辅的一种结构,如微信小程序,快应用,现代版QQ B/S+C/S混合结构
以B/S为主,C/S为辅的一种结构,如在线直播,在线电影   开发模型
主要是MVC,其中包含MVC 1.0和MVC 2.0,其中MVVP是对MVC的扩展 开发框架  weex quickapp weixin app uniapp mui    跨域与协议   跨域 定义:网页应用中的一种安全机制,域:作用域,网页应用中的ip/主机名/域名
跨域方式:设置头部(request:伪造);设置响应许可(运行那些ip/域名来访问,服务器就做出响应);JSON;webservice
  协议
协议头://host:port/contextroot/path
  跨域的必要条件
协议头不同;主机名不同;IP协议不同;域名不同;端口号不同;上下文根不同</description>
    </item>
    
  </channel>
</rss>